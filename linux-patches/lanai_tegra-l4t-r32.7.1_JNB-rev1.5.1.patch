From 8aeba1d5fa9ff0ecafce10282ae4caaa80d13edf Mon Sep 17 00:00:00 2001
From: Joanna Brozek <jbrozek@antmicro.com>
Date: Fri, 25 Nov 2022 15:27:32 +0100
Subject: [PATCH] Add support for AV cameras

---
 .../common/tegra186-camera-avt_csi2.dtsi      | 405 ++++++++++++++++++
 .../tegra186-camera-lanai-avt_csi2.dtsi       |  72 ++++
 .../tegra186-p3636-0001-p3509-0000-a01.dts    |   2 +-
 3 files changed, 478 insertions(+), 1 deletion(-)
 create mode 100644 kernel-dts/common/tegra186-camera-avt_csi2.dtsi
 create mode 100644 kernel-dts/common/tegra186-camera-lanai-avt_csi2.dtsi

diff --git a/kernel-dts/common/tegra186-camera-avt_csi2.dtsi b/kernel-dts/common/tegra186-camera-avt_csi2.dtsi
new file mode 100644
index 0000000..9a395b6
--- /dev/null
+++ b/kernel-dts/common/tegra186-camera-avt_csi2.dtsi
@@ -0,0 +1,405 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+/ {
+	host1x {
+		vi@15700000  {
+			num-channels = <3>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				vi_port0: port@0 {
+					reg = <0>;
+					avt_csi2_vi_in0: endpoint {
+						port-index = <0>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out0>;
+					};
+				};
+				vi_port1: port@1 {
+					reg = <1>;
+					avt_csi2_vi_in1: endpoint {
+						port-index = <2>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out1>;
+					};
+				};
+				vi_port2: port@2 {
+					reg = <2>;
+					avt_csi2_vi_in2: endpoint {
+						port-index = <4>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out2>;
+					};
+				};
+			};
+		};
+
+		nvcsi@150c0000 {
+			num-channels = <3>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out0>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						avt_csi2_csi_in1: endpoint@2 {
+							port-index = <2>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out1>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						avt_csi2_csi_out1: endpoint@3 {
+							remote-endpoint = <&avt_csi2_vi_in1>;
+						};
+					};
+				};
+			};
+			csi_chan2: channel@2 {
+				reg = <2>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						avt_csi2_csi_in2: endpoint@4 {
+							port-index = <4>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out2>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						avt_csi2_csi_out2: endpoint@5 {
+							remote-endpoint = <&avt_csi2_vi_in2>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	i2c@3180000 {
+		pca9547@70 {
+			i2c_2:i2c@2 {
+				avt_csi2_a@3c {
+					status = "okay";
+					devnode = "video0";
+					compatible = "alliedvision,avt_csi2";
+					reg = <0x3c>;
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+
+						port@0 {
+							reg = <0>;
+							avt_csi2_out0: endpoint {
+								port-index = <0>;
+								bus-width = <4>;
+								remote-endpoint = <&avt_csi2_csi_in0>;
+						   };
+						};
+					};
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_a";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						mode_type = "bayer";
+						pixel_phase = "bggr";
+						csi_pixel_bit_depth = "10";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+				};
+			};
+			i2c_1: i2c@1 {
+				avt_csi2_c@3c {
+					status = "okay";
+					devnode = "video1";
+					compatible = "alliedvision,avt_csi2";
+					reg = <0x3c>;
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+
+						port@0 {
+							reg = <0>;
+							avt_csi2_out1: endpoint {
+								port-index = <2>;
+								bus-width = <4>;
+								remote-endpoint = <&avt_csi2_csi_in1>;
+							};
+						};
+					};
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_c";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						mode_type = "bayer";
+						pixel_phase = "bggr";
+						csi_pixel_bit_depth = "10";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+				};
+			};
+			i2c_3: i2c@3 {
+				avt_csi2_e@3c {
+					status = "okay";
+					devnode = "video2";
+					compatible = "alliedvision,avt_csi2";
+					reg = <0x3c>;
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+
+						port@0 {
+							reg = <0>;
+							avt_csi2_out2: endpoint {
+								port-index = <4>;
+								bus-width = <4>;
+								remote-endpoint = <&avt_csi2_csi_in2>;
+							};
+						};
+					};
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_e";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						mode_type = "bayer";
+						pixel_phase = "bggr";
+						csi_pixel_bit_depth = "10";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+				};
+			};
+		};
+	};
+
+};
+/ {
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <12>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <10>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <240000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		/* badge number remains same for 186 and 194 for them to share the same config */
+		modules {
+			module0 {
+				status = "okay";
+				badge = "avt_csi2_0";
+				position = "front";
+				orientation = "1";
+				drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 0 2-003c";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/pca9547@70/i2c@2/avt_csi2_a@3c";
+				};
+				drivernode1 {
+					pcl_id = "v4l2_lens";
+				};
+			};
+			module1 {
+				status = "okay";
+				badge = "avt_csi2_1";
+				position = "front";
+				orientation = "1";
+				drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 1 2-003c";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/pca9547@70/i2c@1/avt_csi2_c@3c";
+				};
+				drivernode1 {
+					pcl_id = "v4l2_lens";
+				};
+			};
+			module2 {
+				status = "okay";
+				badge = "avt_csi2_2";
+				position = "front";
+				orientation = "1";
+				drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 2 2-003c";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/pca9547@70/i2c@3/avt_csi2_e@3c";
+				};
+				drivernode1 {
+					pcl_id = "v4l2_lens";
+				};
+			};
+		};
+	};
+};
diff --git a/kernel-dts/common/tegra186-camera-lanai-avt_csi2.dtsi b/kernel-dts/common/tegra186-camera-lanai-avt_csi2.dtsi
new file mode 100644
index 0000000..a8ab783
--- /dev/null
+++ b/kernel-dts/common/tegra186-camera-lanai-avt_csi2.dtsi
@@ -0,0 +1,72 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "tegra186-camera-avt_csi2.dtsi"
+
+#define CAM1_PWDN	TEGRA_AON_GPIO(EE, 2)   // GPIO11	- VSYNC_CAM1_2
+#define CAM2_PWDN	TEGRA_MAIN_GPIO(N, 0)  // CAM0_PWDN - VSYNC_CAM2_1
+#define CAM3_PWDN	TEGRA_MAIN_GPIO(C, 4)  // GPIO06	- VSYNC_CAM2_2
+
+/ {
+	i2c@3180000 {
+		pca9547@70 {
+			compatible = "nxp,pca9547";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x70>;
+			vcc-supply = <&vdd_3v3>;
+			vcc_lp = "vcc";
+			status = "okay";
+			i2c@2 {
+				reg = <2>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2_a@3c {
+					reset-gpios = <&tegra_main_gpio CAM3_PWDN GPIO_ACTIVE_HIGH>;
+				};
+			};
+			i2c@1 {
+				reg = <1>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2_c@3c {
+					reset-gpios = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
+				};
+			};
+			i2c@3 {
+				reg = <3>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2_e@3c {
+					reset-gpios = <&tegra_main_gpio CAM2_PWDN GPIO_ACTIVE_HIGH>;
+				};
+			};
+		};
+	};
+
+	gpio@2200000 {
+		camera-control-output-low {
+			gpio-hog;
+			output-low;
+			gpios = <CAM1_PWDN 0 CAM2_PWDN 0 CAM3_PWDN 0>;
+			label = "cam1-pwdn", "cam2-pwdn", "cam3-pwdn";
+		};
+	};
+};
diff --git a/kernel-dts/tegra186-p3636-0001-p3509-0000-a01.dts b/kernel-dts/tegra186-p3636-0001-p3509-0000-a01.dts
index 8337d9b..2774c19 100644
--- a/kernel-dts/tegra186-p3636-0001-p3509-0000-a01.dts
+++ b/kernel-dts/tegra186-p3636-0001-p3509-0000-a01.dts
@@ -16,7 +16,7 @@
 #include "common/tegra186-p3509-0000-cvb.dtsi"
 #include "common/tegra186-p3509-0000-a00-fixed-regulator.dtsi"
 #include "common/tegra186-p3636-0001-a00-prod.dtsi"
-#include "common/tegra186-camera-lanai-rbpcv2-imx219.dtsi"
+#include "common/tegra186-camera-lanai-avt_csi2.dtsi"
 
 /* plugin manager */
 #include "common/tegra186-super-module-e2614-p3509-0000-a00.dtsi"
-- 
2.25.1

