From d9dc4f679679ed48d73ba29eb9ccb93007e0f567 Mon Sep 17 00:00:00 2001
From: Tom Molnar <tom.molnar@csiro.au>
Date: Mon, 13 Feb 2023 10:11:41 +1000
Subject: [PATCH] jakku: add support for Antmicro JNB rev.1.5.1 (multiple configurations)

---
 .../jetson_build/files/bootloader/config      |  16 +
 .../platform/t19x/jakku/kernel-dts/Makefile   |   8 +
 ...94-camera-jakku-avt-csi2-antmicro-all.dtsi | 541 ++++++++++++++++++
 ...amera-jakku-avt-csi2-antmicro-dual-j6.dtsi | 315 ++++++++++
 ...amera-jakku-avt-csi2-antmicro-dual-j7.dtsi | 314 ++++++++++
 ...ra-jakku-avt-csi2-antmicro-dual-split.dtsi | 315 ++++++++++
 ...194-p3668-0000-p3509-0000-antmicro-all.dts |  34 ++
 ...p3668-0000-p3509-0000-antmicro-dual-j6.dts |  34 ++
 ...p3668-0000-p3509-0000-antmicro-dual-j7.dts |  34 ++
 ...68-0000-p3509-0000-antmicro-dual-split.dts |  34 ++
 ...194-p3668-0001-p3509-0000-antmicro-all.dts |  31 +
 ...p3668-0001-p3509-0000-antmicro-dual-j6.dts |  31 +
 ...p3668-0001-p3509-0000-antmicro-dual-j7.dts |  31 +
 ...68-0001-p3509-0000-antmicro-dual-split.dts |  31 +
 14 files changed, 1769 insertions(+)
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-all.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-all.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dts
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dts

diff --git a/avt_build/jetson_build/files/bootloader/config b/avt_build/jetson_build/files/bootloader/config
index d936d580b..3b960926e 100644
--- a/avt_build/jetson_build/files/bootloader/config
+++ b/avt_build/jetson_build/files/bootloader/config
@@ -82,6 +82,22 @@ nx_devkit = BoardDefinition('Jetson Xavier NX devkit', '0x19', '3668', [
     #NX 16GB
     Configuration('DevKit', 'tegra194-p3668-0001-p3509-0000-avt.dtb', '0003'),
 
+    Configuration('Antmicro All', 'tegra194-p3668-0000-p3509-0000-antmicro-all.dtb', '0000'),
+    Configuration('Antmicro All', 'tegra194-p3668-0001-p3509-0000-antmicro-all.dtb', '0001'),
+    Configuration('Antmicro All', 'tegra194-p3668-0001-p3509-0000-antmicro-all.dtb', '0003'),
+
+    Configuration('Antmicro Dual-J6', 'tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dtb', '0000'),
+    Configuration('Antmicro Dual-J6', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dtb', '0001'),
+    Configuration('Antmicro Dual-J6', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dtb', '0003'),
+
+    Configuration('Antmicro Dual-J7', 'tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dtb', '0000'),
+    Configuration('Antmicro Dual-J7', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dtb', '0001'),
+    Configuration('Antmicro Dual-J7', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dtb', '0003'),
+
+    Configuration('Antmicro Dual-Split', 'tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dtb', '0000'),
+    Configuration('Antmicro Dual-Split', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dtb', '0001'),
+    Configuration('Antmicro Dual-Split', 'tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dtb', '0003'),
+
     #Configuration('Auvidea JNX30 (beta)', 'tegra194-p3668-all-p3509-0000-auvidea-jnx30.dtb', '0000', beta=True),
     #Configuration('Auvidea JNX30 (beta)', 'tegra194-p3668-all-p3509-0000-auvidea-jnx30.dtb', '0001', beta=True),
     #NX 16GB
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/Makefile b/hardware/nvidia/platform/t19x/jakku/kernel-dts/Makefile
index 8e6787ccf..d1429fdbf 100644
--- a/hardware/nvidia/platform/t19x/jakku/kernel-dts/Makefile
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/Makefile
@@ -11,8 +11,16 @@ endif
 
 dtb-$(BUILD_ENABLE) += tegra194-p3668-all-p3509-0000.dtb
 dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000-antmicro-all.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dtb
 dtb-$(BUILD_ENABLE) += tegra194-p3668-0000-p3509-0000-avt.dtb
 dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000-antmicro-all.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dtb
+dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dtb
 dtb-$(BUILD_ENABLE) += tegra194-p3668-0001-p3509-0000-avt.dtb
 dtb-$(CONFIG_ARCH_TEGRA_19x_SOC) += tegra194-p3668-all-p3509-0000-kexec.dtb
 dtbo-$(BUILD_ENABLE) += tegra194-p3668-all-p3509-0000-hdr40.dtbo
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi
new file mode 100644
index 000000000..15a67243e
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi
@@ -0,0 +1,541 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/ {
+	tegra-capture-vi  {
+			num-channels = <4>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				vi_port0: port@0 {
+					reg = <0>;
+					avt_csi2_vi_in0: endpoint {
+						port-index = <5>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out0>;
+					};
+				};
+
+				vi_port1: port@1 {
+					reg = <1>;
+					avt_csi2_vi_in1: endpoint {
+						port-index = <2>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out1>;
+					};
+				};
+
+				vi_port2: port@2 {
+					reg = <2>;
+					avt_csi2_vi_in2: endpoint {
+						port-index = <0>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out2>;
+					};
+				};
+
+				vi_port3: port@3 {
+					reg = <3>;
+					avt_csi2_vi_in3: endpoint {
+						port-index = <4>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out3>;
+					};
+				};
+			};
+		};
+
+	host1x@13e00000 {
+		nvcsi@15a00000 {
+			num-channels = <4>;
+			
+      #address-cells = <1>;
+			#size-cells = <0>;
+
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <5>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan1_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in1: endpoint@0 {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out1>;
+						};
+					};
+					csi_chan1_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out1: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in1>;
+						};
+					};
+				};
+			};
+
+			csi_chan2: channel@2 {
+				reg = <2>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan2_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in2: endpoint@0 {
+							port-index = <0>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out2>;
+						};
+					};
+					csi_chan2_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out2: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in2>;
+						};
+					};
+				};
+			};
+
+			csi_chan3: channel@3 {
+				reg = <3>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan3_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in3: endpoint@0 {
+							port-index = <4>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out3>;
+						};
+					};
+					csi_chan3_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out3: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in3>;
+						};
+					};
+				};
+			};
+
+		};
+	};
+
+	i2c@3180000 {
+		avt_pca9547: avt_pca9547@70 {
+			compatible = "nxp,pca9547";
+			status = "okay";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			vcc-supply = <&battery_reg>;
+			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+			i2c@0 {
+				reg = <0>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video0";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_g";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						csi_pixel_bit_depth = "4";
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out0: endpoint {
+								status = "okay";
+								port-index = <5>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in0>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@1 {
+				reg = <1>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video1";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_e";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						csi_pixel_bit_depth = "4";
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out1: endpoint {
+								status = "okay";
+								port-index = <2>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in1>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@2 {
+				reg = <2>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video2";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_a";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						csi_pixel_bit_depth = "4";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out2: endpoint {
+								port-index = <0>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in2>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@3 {
+				reg = <3>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video3";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_c";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						csi_pixel_bit_depth = "4";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out3: endpoint {
+								port-index = <4>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in3>;
+							};
+						};
+					};
+				};
+			};
+		};
+	};
+
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <8>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <8>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <160000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		modules {
+			cam_module0: module0 {
+				badge = "avt_csi2";
+				position = "topleft";
+				orientation = "1";
+				cam_module0_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 30-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@0/avt_csi2@3c";
+				};
+			};
+			cam_module1: module1 {
+				badge = "avt_csi2";
+				position = "topright";
+				orientation = "1";
+				cam_module1_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 31-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@1/avt_csi2@3c";
+				};
+			};
+			cam_module2: module2 {
+				badge = "avt_csi2";
+				position = "bottomright";
+				orientation = "1";
+				cam_module2_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 32-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@2/avt_csi2@3c";
+				};
+			};
+			cam_module3: module3 {
+				badge = "avt_csi2";
+				position = "bottomleft";
+				orientation = "1";
+				cam_module3_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 33-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@3/avt_csi2@3c";
+				};
+			};
+		};
+	};
+};
+
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi
new file mode 100644
index 000000000..38c569d35
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi
@@ -0,0 +1,315 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/ {
+	tegra-capture-vi  {
+			num-channels = <2>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				vi_port0: port@0 {
+					reg = <0>;
+					avt_csi2_vi_in0: endpoint {
+						port-index = <5>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out0>;
+					};
+				};
+				vi_port1: port@1 {
+					reg = <1>;
+					avt_csi2_vi_in1: endpoint {
+						port-index = <2>;
+						bus-width = <2>;
+						remote-endpoint = <&avt_csi2_csi_out1>;
+					};
+				};
+			};
+		};
+	host1x@13e00000 {
+		nvcsi@15a00000 {
+			num-channels = <2>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <5>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan1_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in1: endpoint@0 {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&avt_csi2_out1>;
+						};
+					};
+					csi_chan1_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out1: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in1>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	i2c@3180000 {
+		avt_pca9547: avt_pca9547@70 {
+			compatible = "nxp,pca9547";
+			status = "okay";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			vcc-supply = <&battery_reg>;
+			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+				i2c@0 {
+				reg = <0>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video0";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_g";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						csi_pixel_bit_depth = "4";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out0: endpoint {
+								port-index = <5>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in0>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@1 {
+				reg = <1>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video1";
+
+					mode0 {
+						num_lanes = "2";
+						tegra_sinterface = "serial_e";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						csi_pixel_bit_depth = "4";
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out1: endpoint {
+								status = "okay";
+								port-index = <2>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in1>;
+							};
+						};
+					};
+				};
+			};
+		};
+	};
+
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <4>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <8>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <160000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		modules {
+			cam_module0: module0 {
+				badge = "avt_csi2";
+				position = "front";
+				orientation = "1";
+				cam_module0_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 30-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@0/avt_csi2@3c";
+				};
+			};
+			cam_module1: module1 {
+				badge = "avt_csi2";
+				position = "rear";
+				orientation = "1";
+				cam_module1_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 31-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@1/avt_csi2@3c";
+				};
+			};
+		};
+	};
+};
+
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi
new file mode 100644
index 000000000..e4723713b
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi
@@ -0,0 +1,314 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/ {
+	tegra-capture-vi  {
+			num-channels = <2>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				vi_port0: port@0 {
+					reg = <0>;
+					avt_csi2_vi_in0: endpoint {
+						port-index = <0>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out0>;
+					};
+				};
+				vi_port1: port@1 {
+					reg = <1>;
+					avt_csi2_vi_in1: endpoint {
+						port-index = <4>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out1>;
+					};
+				};
+			};
+		};
+	host1x@13e00000 {
+		nvcsi@15a00000 {
+			num-channels = <2>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan1_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in1: endpoint@0 {
+							port-index = <4>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out1>;
+						};
+					};
+					csi_chan1_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out1: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in1>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	i2c@3180000 {
+		avt_pca9547: avt_pca9547@70 {
+			compatible = "nxp,pca9547";
+			status = "okay";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			vcc-supply = <&battery_reg>;
+			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+				i2c@2 {
+				reg = <2>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video0";
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_a";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						csi_pixel_bit_depth = "4";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out0: endpoint {
+								port-index = <0>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in0>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@3 {
+				reg = <3>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video1";
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_c";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						csi_pixel_bit_depth = "4";
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out1: endpoint {
+								status = "okay";
+								port-index = <4>;
+								bus-width = <2>;
+								remote-endpoint = <&avt_csi2_csi_in1>;
+							};
+						};
+					};
+				};
+			};
+		};
+	};
+
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <8>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <8>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <160000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		modules {
+			cam_module0: module0 {
+				badge = "avt_csi2";
+				position = "front";
+				orientation = "1";
+				cam_module0_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 32-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@2/avt_csi2@3c";
+				};
+			};
+			cam_module1: module1 {
+				badge = "avt_csi2";
+				position = "rear";
+				orientation = "1";
+				cam_module1_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 33-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@3/avt_csi2@3c";
+				};
+			};
+		};
+	};
+};
\ No newline at end of file
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi
new file mode 100644
index 000000000..92b665674
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi
@@ -0,0 +1,315 @@
+/*
+ * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/ {
+	tegra-capture-vi  {
+			num-channels = <2>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				vi_port0: port@0 {
+					reg = <0>;
+					avt_csi2_vi_in0: endpoint {
+						port-index = <0>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out0>;
+					};
+				};
+				vi_port1: port@1 {
+					reg = <1>;
+					avt_csi2_vi_in1: endpoint {
+						port-index = <2>;
+						bus-width = <4>;
+						remote-endpoint = <&avt_csi2_csi_out1>;
+					};
+				};
+			};
+		};
+	host1x@13e00000 {
+		nvcsi@15a00000 {
+			num-channels = <2>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan1_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in1: endpoint@0 {
+							port-index = <2>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_out1>;
+						};
+					};
+					csi_chan1_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out1: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in1>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	i2c@3180000 {
+		avt_pca9547: avt_pca9547@70 {
+			compatible = "nxp,pca9547";
+			status = "okay";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			vcc-supply = <&battery_reg>;
+			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+			i2c@1 {
+				reg = <1>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video0";
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_e";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						csi_pixel_bit_depth = "4";
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out1: endpoint {
+								status = "okay";
+								port-index = <2>;
+								bus-width = <4>;
+								remote-endpoint = <&avt_csi2_csi_in1>;
+							};
+						};
+					};
+				};
+			};
+
+			i2c@2 {
+				reg = <2>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				avt_csi2@3c {
+					compatible = "alliedvision,avt_csi2";
+					/* I2C device address */
+					reg = <0x3c>;
+
+					status = "okay";
+
+					/* V4L2 device node location */
+					devnode = "video1";
+
+					mode0 {
+						num_lanes = "4";
+						tegra_sinterface = "serial_a";
+						discontinuous_clk = "no";
+						cil_settletime = "0";
+						embedded_metadata_height = "0";
+
+						/* not verified: */
+						mclk_khz = "24000";
+						phy_mode = "DPHY";
+						dpcm_enable = "false";
+
+						active_w = "5488";
+						active_h = "4112";
+						pixel_t = "bayer_bggr";
+						csi_pixel_bit_depth = "4";
+						readout_orientation = "0";
+						line_length = "5488";
+						inherent_gain = "1";
+						mclk_multiplier = "31.25";
+						pix_clk_hz = "750000000";
+
+						gain_factor = "16";
+						framerate_factor = "1000000";
+						exposure_factor = "1000000";
+						min_gain_val = "16"; /* 1.0 */
+						max_gain_val = "256"; /* 16.0 */
+						step_gain_val = "1"; /* 0.125 */
+						min_hdr_ratio = "1";
+						max_hdr_ratio = "64";
+						min_framerate = "1500000"; /* 1.5 */
+						max_framerate = "30000000"; /* 30 */
+						step_framerate = "1";
+						min_exp_time = "34"; /* us */
+						max_exp_time = "550385"; /* us */
+						step_exp_time = "1";
+					};
+
+					ports {
+						#address-cells = <1>;
+						#size-cells = <0>;
+						port@0 {
+							reg = <0>;
+							avt_csi2_out0: endpoint {
+								port-index = <0>;
+								bus-width = <4>;
+								remote-endpoint = <&avt_csi2_csi_in0>;
+							};
+						};
+					};
+				};
+			};
+		};
+	};
+
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <8>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <8>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <160000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		modules {
+			cam_module0: module0 {
+				badge = "avt_csi2";
+				position = "front";
+				orientation = "1";
+				cam_module0_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 31-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@1/avt_csi2@3c";
+				};
+			};
+			cam_module1: module1 {
+				badge = "avt_csi2";
+				position = "rear";
+				orientation = "1";
+				cam_module1_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 32-003C";
+					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_pca9547@70/i2c@2/avt_csi2@3c";
+				};
+			};
+		};
+	};
+};
+
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-all.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-all.dts
new file mode 100644
index 000000000..3c10cc463
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-all.dts
@@ -0,0 +1,34 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi"
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0000", "nvidia,p3509-0000+p3668-0000", "nvidia,tegra194";
+
+	sdhci@3460000 {
+		status = "disabled";
+	};
+
+	aliases {
+		/delete-property/ mmc0;
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dts
new file mode 100644
index 000000000..73207afa1
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j6.dts
@@ -0,0 +1,34 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi"
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0000", "nvidia,p3509-0000+p3668-0000", "nvidia,tegra194";
+
+	sdhci@3460000 {
+		status = "disabled";
+	};
+
+	aliases {
+		/delete-property/ mmc0;
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dts
new file mode 100644
index 000000000..c26437032
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-j7.dts
@@ -0,0 +1,34 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi"
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0000", "nvidia,p3509-0000+p3668-0000", "nvidia,tegra194";
+
+	sdhci@3460000 {
+		status = "disabled";
+	};
+
+	aliases {
+		/delete-property/ mmc0;
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dts
new file mode 100644
index 000000000..1ee110288
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0000-p3509-0000-antmicro-dual-split.dts
@@ -0,0 +1,34 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi"
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0000", "nvidia,p3509-0000+p3668-0000", "nvidia,tegra194";
+
+	sdhci@3460000 {
+		status = "disabled";
+	};
+
+	aliases {
+		/delete-property/ mmc0;
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-all.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-all.dts
new file mode 100644
index 000000000..fcca17496
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-all.dts
@@ -0,0 +1,31 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-all.dtsi"
+
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0001", "nvidia,p3509-0000+p3668-0001", "nvidia,tegra194";
+
+	sdhci@3400000 {
+		status = "disabled";
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dts
new file mode 100644
index 000000000..50bb1e072
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j6.dts
@@ -0,0 +1,31 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j6.dtsi"
+
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0001", "nvidia,p3509-0000+p3668-0001", "nvidia,tegra194";
+
+	sdhci@3400000 {
+		status = "disabled";
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dts
new file mode 100644
index 000000000..db8b36941
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-j7.dts
@@ -0,0 +1,31 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-j7.dtsi"
+
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0001", "nvidia,p3509-0000+p3668-0001", "nvidia,tegra194";
+
+	sdhci@3400000 {
+		status = "disabled";
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dts b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dts
new file mode 100644
index 000000000..bbcfbe73a
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000-antmicro-dual-split.dts
@@ -0,0 +1,31 @@
+/*
+ * Top level DTS file for CVM:P3668-0001 and CVB:P3509-0000.
+ *
+ * Copyright (c) 2019-2020, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+/dts-v1/;
+#include "common/tegra194-p3668-common.dtsi"
+#include "common/tegra194-p3509-0000-a00.dtsi"
+#include "common/tegra194-camera-jakku-avt-csi2-antmicro-dual-split.dtsi"
+
+
+/ {
+	nvidia,dtsfilename = __FILE__;
+	nvidia,dtbbuildtime = __DATE__, __TIME__;
+
+	compatible = "nvidia,p3449-0000+p3668-0001", "nvidia,p3509-0000+p3668-0001", "nvidia,tegra194";
+
+	sdhci@3400000 {
+		status = "disabled";
+	};
+};
-- 
2.25.1

